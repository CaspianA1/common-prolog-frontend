Grammar

    0 $accept: expr_seq $end

    1 expr: decl_fact
    2     | atom end_stmt
    3     | decl_rule
    4     | atom horn rule_exprs

    5 expr_seq: expr
    6         | expr expr_seq
    7         | eof

    8 list: lbracket list_seq rbracket

    9 list_seq: value
   10         | value vline value
   11         | value comma list_seq

   12 value: /* empty */
   13      | atom
   14      | t_string
   15      | wildcard
   16      | structure
   17      | list
   18      | math_expr_low

   19 unification: value unifier value

   20 structure: atom lparen args rparen

   21 args: value
   22     | value comma args

   23 expr_in_functor: /* empty */
   24                | unification
   25                | structure
   26                | negation expr_in_functor
   27                | cut
   28                | atom
   29                | eval_math
   30                | math_expr_low

   31 decl_fact: structure end_stmt

   32 decl_rule: structure horn rule_exprs

   33 expr_delim: comma
   34           | semicolon

   35 rule_exprs: expr_in_functor end_stmt
   36           | expr_in_functor expr_delim rule_exprs

   37 eval_math: math_expr_low math_evaluator math_expr_low

   38 prec_1: smaller
   39       | smaller_eq
   40       | greater
   41       | greater_eq

   42 prec_2: add
   43       | subtract

   44 prec_3: multiply
   45       | divide

   46 math_expr_low: math_expr_high
   47              | math_expr_low prec_1 math_expr_high

   48 math_expr_high: math_term_low
   49               | math_expr_high prec_2 math_term_low

   50 math_term_low: math_term_high
   51              | math_term_low prec_3 math_term_high

   52 math_term_high: math_factor
   53               | math_term_high exponent math_factor

   54 math_factor: operand
   55            | lparen math_expr_low rparen

   56 operand: t_integer
   57        | t_floating
   58        | variable


Terminals, with rules where they appear

$end (0) 0
error (256)
eof (258) 7
lparen (259) 20 55
rparen (260) 20 55
lbracket (261) 8
rbracket (262) 8
vline (263) 10
comma (264) 11 22 33
semicolon (265) 34
horn (266) 4 32
end_stmt (267) 2 31 35
wildcard (268) 15
math_evaluator (269) 37
unifier (270) 19
negation (271) 26
exponent (272) 53
add (273) 42
subtract (274) 43
multiply (275) 44
divide (276) 45
smaller (277) 38
smaller_eq (278) 39
greater (279) 40
greater_eq (280) 41
cut (281) 27
variable (282) 58
atom (283) 2 4 13 20 28
t_string (284) 14
t_integer (285) 56
t_floating (286) 57


Nonterminals, with rules where they appear

$accept (32)
    on left: 0
expr (33)
    on left: 1 2 3 4, on right: 5 6
expr_seq (34)
    on left: 5 6 7, on right: 0 6
list (35)
    on left: 8, on right: 17
list_seq (36)
    on left: 9 10 11, on right: 8 11
value (37)
    on left: 12 13 14 15 16 17 18, on right: 9 10 11 19 21 22
unification (38)
    on left: 19, on right: 24
structure (39)
    on left: 20, on right: 16 25 31 32
args (40)
    on left: 21 22, on right: 20 22
expr_in_functor (41)
    on left: 23 24 25 26 27 28 29 30, on right: 26 35 36
decl_fact (42)
    on left: 31, on right: 1
decl_rule (43)
    on left: 32, on right: 3
expr_delim (44)
    on left: 33 34, on right: 36
rule_exprs (45)
    on left: 35 36, on right: 4 32 36
eval_math (46)
    on left: 37, on right: 29
prec_1 (47)
    on left: 38 39 40 41, on right: 47
prec_2 (48)
    on left: 42 43, on right: 49
prec_3 (49)
    on left: 44 45, on right: 51
math_expr_low (50)
    on left: 46 47, on right: 18 30 37 47 55
math_expr_high (51)
    on left: 48 49, on right: 46 47 49
math_term_low (52)
    on left: 50 51, on right: 48 49 51
math_term_high (53)
    on left: 52 53, on right: 50 51 53
math_factor (54)
    on left: 54 55, on right: 52 53
operand (55)
    on left: 56 57 58, on right: 54


state 0

    0 $accept: . expr_seq $end

    eof   shift, and go to state 1
    atom  shift, and go to state 2

    expr       go to state 3
    expr_seq   go to state 4
    structure  go to state 5
    decl_fact  go to state 6
    decl_rule  go to state 7


state 1

    7 expr_seq: eof .

    $default  reduce using rule 7 (expr_seq)


state 2

    2 expr: atom . end_stmt
    4     | atom . horn rule_exprs
   20 structure: atom . lparen args rparen

    lparen    shift, and go to state 8
    horn      shift, and go to state 9
    end_stmt  shift, and go to state 10


state 3

    5 expr_seq: expr .
    6         | expr . expr_seq

    eof   shift, and go to state 1
    atom  shift, and go to state 2

    $default  reduce using rule 5 (expr_seq)

    expr       go to state 3
    expr_seq   go to state 11
    structure  go to state 5
    decl_fact  go to state 6
    decl_rule  go to state 7


state 4

    0 $accept: expr_seq . $end

    $end  shift, and go to state 12


state 5

   31 decl_fact: structure . end_stmt
   32 decl_rule: structure . horn rule_exprs

    horn      shift, and go to state 13
    end_stmt  shift, and go to state 14


state 6

    1 expr: decl_fact .

    $default  reduce using rule 1 (expr)


state 7

    3 expr: decl_rule .

    $default  reduce using rule 3 (expr)


state 8

   20 structure: atom lparen . args rparen

    lparen      shift, and go to state 15
    lbracket    shift, and go to state 16
    wildcard    shift, and go to state 17
    variable    shift, and go to state 18
    atom        shift, and go to state 19
    t_string    shift, and go to state 20
    t_integer   shift, and go to state 21
    t_floating  shift, and go to state 22

    $default  reduce using rule 12 (value)

    list            go to state 23
    value           go to state 24
    structure       go to state 25
    args            go to state 26
    math_expr_low   go to state 27
    math_expr_high  go to state 28
    math_term_low   go to state 29
    math_term_high  go to state 30
    math_factor     go to state 31
    operand         go to state 32


state 9

    4 expr: atom horn . rule_exprs

    lparen      shift, and go to state 15
    lbracket    shift, and go to state 16
    wildcard    shift, and go to state 17
    negation    shift, and go to state 33
    cut         shift, and go to state 34
    variable    shift, and go to state 18
    atom        shift, and go to state 35
    t_string    shift, and go to state 20
    t_integer   shift, and go to state 21
    t_floating  shift, and go to state 22

    unifier   reduce using rule 12 (value)
    $default  reduce using rule 23 (expr_in_functor)

    list             go to state 23
    value            go to state 36
    unification      go to state 37
    structure        go to state 38
    expr_in_functor  go to state 39
    rule_exprs       go to state 40
    eval_math        go to state 41
    math_expr_low    go to state 42
    math_expr_high   go to state 28
    math_term_low    go to state 29
    math_term_high   go to state 30
    math_factor      go to state 31
    operand          go to state 32


state 10

    2 expr: atom end_stmt .

    $default  reduce using rule 2 (expr)


state 11

    6 expr_seq: expr expr_seq .

    $default  reduce using rule 6 (expr_seq)


state 12

    0 $accept: expr_seq $end .

    $default  accept


state 13

   32 decl_rule: structure horn . rule_exprs

    lparen      shift, and go to state 15
    lbracket    shift, and go to state 16
    wildcard    shift, and go to state 17
    negation    shift, and go to state 33
    cut         shift, and go to state 34
    variable    shift, and go to state 18
    atom        shift, and go to state 35
    t_string    shift, and go to state 20
    t_integer   shift, and go to state 21
    t_floating  shift, and go to state 22

    unifier   reduce using rule 12 (value)
    $default  reduce using rule 23 (expr_in_functor)

    list             go to state 23
    value            go to state 36
    unification      go to state 37
    structure        go to state 38
    expr_in_functor  go to state 39
    rule_exprs       go to state 43
    eval_math        go to state 41
    math_expr_low    go to state 42
    math_expr_high   go to state 28
    math_term_low    go to state 29
    math_term_high   go to state 30
    math_factor      go to state 31
    operand          go to state 32


state 14

   31 decl_fact: structure end_stmt .

    $default  reduce using rule 31 (decl_fact)


state 15

   55 math_factor: lparen . math_expr_low rparen

    lparen      shift, and go to state 15
    variable    shift, and go to state 18
    t_integer   shift, and go to state 21
    t_floating  shift, and go to state 22

    math_expr_low   go to state 44
    math_expr_high  go to state 28
    math_term_low   go to state 29
    math_term_high  go to state 30
    math_factor     go to state 31
    operand         go to state 32


state 16

    8 list: lbracket . list_seq rbracket

    lparen      shift, and go to state 15
    lbracket    shift, and go to state 16
    wildcard    shift, and go to state 17
    variable    shift, and go to state 18
    atom        shift, and go to state 19
    t_string    shift, and go to state 20
    t_integer   shift, and go to state 21
    t_floating  shift, and go to state 22

    $default  reduce using rule 12 (value)

    list            go to state 23
    list_seq        go to state 45
    value           go to state 46
    structure       go to state 25
    math_expr_low   go to state 27
    math_expr_high  go to state 28
    math_term_low   go to state 29
    math_term_high  go to state 30
    math_factor     go to state 31
    operand         go to state 32


state 17

   15 value: wildcard .

    $default  reduce using rule 15 (value)


state 18

   58 operand: variable .

    $default  reduce using rule 58 (operand)


state 19

   13 value: atom .
   20 structure: atom . lparen args rparen

    lparen  shift, and go to state 8

    $default  reduce using rule 13 (value)


state 20

   14 value: t_string .

    $default  reduce using rule 14 (value)


state 21

   56 operand: t_integer .

    $default  reduce using rule 56 (operand)


state 22

   57 operand: t_floating .

    $default  reduce using rule 57 (operand)


state 23

   17 value: list .

    $default  reduce using rule 17 (value)


state 24

   21 args: value .
   22     | value . comma args

    comma  shift, and go to state 47

    $default  reduce using rule 21 (args)


state 25

   16 value: structure .

    $default  reduce using rule 16 (value)


state 26

   20 structure: atom lparen args . rparen

    rparen  shift, and go to state 48


state 27

   18 value: math_expr_low .
   47 math_expr_low: math_expr_low . prec_1 math_expr_high

    smaller     shift, and go to state 49
    smaller_eq  shift, and go to state 50
    greater     shift, and go to state 51
    greater_eq  shift, and go to state 52

    $default  reduce using rule 18 (value)

    prec_1  go to state 53


state 28

   46 math_expr_low: math_expr_high .
   49 math_expr_high: math_expr_high . prec_2 math_term_low

    add       shift, and go to state 54
    subtract  shift, and go to state 55

    $default  reduce using rule 46 (math_expr_low)

    prec_2  go to state 56


state 29

   48 math_expr_high: math_term_low .
   51 math_term_low: math_term_low . prec_3 math_term_high

    multiply  shift, and go to state 57
    divide    shift, and go to state 58

    $default  reduce using rule 48 (math_expr_high)

    prec_3  go to state 59


state 30

   50 math_term_low: math_term_high .
   53 math_term_high: math_term_high . exponent math_factor

    exponent  shift, and go to state 60

    $default  reduce using rule 50 (math_term_low)


state 31

   52 math_term_high: math_factor .

    $default  reduce using rule 52 (math_term_high)


state 32

   54 math_factor: operand .

    $default  reduce using rule 54 (math_factor)


state 33

   26 expr_in_functor: negation . expr_in_functor

    lparen      shift, and go to state 15
    lbracket    shift, and go to state 16
    wildcard    shift, and go to state 17
    negation    shift, and go to state 33
    cut         shift, and go to state 34
    variable    shift, and go to state 18
    atom        shift, and go to state 35
    t_string    shift, and go to state 20
    t_integer   shift, and go to state 21
    t_floating  shift, and go to state 22

    unifier   reduce using rule 12 (value)
    $default  reduce using rule 23 (expr_in_functor)

    list             go to state 23
    value            go to state 36
    unification      go to state 37
    structure        go to state 38
    expr_in_functor  go to state 61
    eval_math        go to state 41
    math_expr_low    go to state 42
    math_expr_high   go to state 28
    math_term_low    go to state 29
    math_term_high   go to state 30
    math_factor      go to state 31
    operand          go to state 32


state 34

   27 expr_in_functor: cut .

    $default  reduce using rule 27 (expr_in_functor)


state 35

   13 value: atom .
   20 structure: atom . lparen args rparen
   28 expr_in_functor: atom .

    lparen  shift, and go to state 8

    unifier   reduce using rule 13 (value)
    $default  reduce using rule 28 (expr_in_functor)


state 36

   19 unification: value . unifier value

    unifier  shift, and go to state 62


state 37

   24 expr_in_functor: unification .

    $default  reduce using rule 24 (expr_in_functor)


state 38

   16 value: structure .
   25 expr_in_functor: structure .

    unifier   reduce using rule 16 (value)
    $default  reduce using rule 25 (expr_in_functor)


state 39

   35 rule_exprs: expr_in_functor . end_stmt
   36           | expr_in_functor . expr_delim rule_exprs

    comma      shift, and go to state 63
    semicolon  shift, and go to state 64
    end_stmt   shift, and go to state 65

    expr_delim  go to state 66


state 40

    4 expr: atom horn rule_exprs .

    $default  reduce using rule 4 (expr)


state 41

   29 expr_in_functor: eval_math .

    $default  reduce using rule 29 (expr_in_functor)


state 42

   18 value: math_expr_low .
   30 expr_in_functor: math_expr_low .
   37 eval_math: math_expr_low . math_evaluator math_expr_low
   47 math_expr_low: math_expr_low . prec_1 math_expr_high

    math_evaluator  shift, and go to state 67
    smaller         shift, and go to state 49
    smaller_eq      shift, and go to state 50
    greater         shift, and go to state 51
    greater_eq      shift, and go to state 52

    unifier   reduce using rule 18 (value)
    $default  reduce using rule 30 (expr_in_functor)

    prec_1  go to state 53


state 43

   32 decl_rule: structure horn rule_exprs .

    $default  reduce using rule 32 (decl_rule)


state 44

   47 math_expr_low: math_expr_low . prec_1 math_expr_high
   55 math_factor: lparen math_expr_low . rparen

    rparen      shift, and go to state 68
    smaller     shift, and go to state 49
    smaller_eq  shift, and go to state 50
    greater     shift, and go to state 51
    greater_eq  shift, and go to state 52

    prec_1  go to state 53


state 45

    8 list: lbracket list_seq . rbracket

    rbracket  shift, and go to state 69


state 46

    9 list_seq: value .
   10         | value . vline value
   11         | value . comma list_seq

    vline  shift, and go to state 70
    comma  shift, and go to state 71

    $default  reduce using rule 9 (list_seq)


state 47

   22 args: value comma . args

    lparen      shift, and go to state 15
    lbracket    shift, and go to state 16
    wildcard    shift, and go to state 17
    variable    shift, and go to state 18
    atom        shift, and go to state 19
    t_string    shift, and go to state 20
    t_integer   shift, and go to state 21
    t_floating  shift, and go to state 22

    $default  reduce using rule 12 (value)

    list            go to state 23
    value           go to state 24
    structure       go to state 25
    args            go to state 72
    math_expr_low   go to state 27
    math_expr_high  go to state 28
    math_term_low   go to state 29
    math_term_high  go to state 30
    math_factor     go to state 31
    operand         go to state 32


state 48

   20 structure: atom lparen args rparen .

    $default  reduce using rule 20 (structure)


state 49

   38 prec_1: smaller .

    $default  reduce using rule 38 (prec_1)


state 50

   39 prec_1: smaller_eq .

    $default  reduce using rule 39 (prec_1)


state 51

   40 prec_1: greater .

    $default  reduce using rule 40 (prec_1)


state 52

   41 prec_1: greater_eq .

    $default  reduce using rule 41 (prec_1)


state 53

   47 math_expr_low: math_expr_low prec_1 . math_expr_high

    lparen      shift, and go to state 15
    variable    shift, and go to state 18
    t_integer   shift, and go to state 21
    t_floating  shift, and go to state 22

    math_expr_high  go to state 73
    math_term_low   go to state 29
    math_term_high  go to state 30
    math_factor     go to state 31
    operand         go to state 32


state 54

   42 prec_2: add .

    $default  reduce using rule 42 (prec_2)


state 55

   43 prec_2: subtract .

    $default  reduce using rule 43 (prec_2)


state 56

   49 math_expr_high: math_expr_high prec_2 . math_term_low

    lparen      shift, and go to state 15
    variable    shift, and go to state 18
    t_integer   shift, and go to state 21
    t_floating  shift, and go to state 22

    math_term_low   go to state 74
    math_term_high  go to state 30
    math_factor     go to state 31
    operand         go to state 32


state 57

   44 prec_3: multiply .

    $default  reduce using rule 44 (prec_3)


state 58

   45 prec_3: divide .

    $default  reduce using rule 45 (prec_3)


state 59

   51 math_term_low: math_term_low prec_3 . math_term_high

    lparen      shift, and go to state 15
    variable    shift, and go to state 18
    t_integer   shift, and go to state 21
    t_floating  shift, and go to state 22

    math_term_high  go to state 75
    math_factor     go to state 31
    operand         go to state 32


state 60

   53 math_term_high: math_term_high exponent . math_factor

    lparen      shift, and go to state 15
    variable    shift, and go to state 18
    t_integer   shift, and go to state 21
    t_floating  shift, and go to state 22

    math_factor  go to state 76
    operand      go to state 32


state 61

   26 expr_in_functor: negation expr_in_functor .

    $default  reduce using rule 26 (expr_in_functor)


state 62

   19 unification: value unifier . value

    lparen      shift, and go to state 15
    lbracket    shift, and go to state 16
    wildcard    shift, and go to state 17
    variable    shift, and go to state 18
    atom        shift, and go to state 19
    t_string    shift, and go to state 20
    t_integer   shift, and go to state 21
    t_floating  shift, and go to state 22

    $default  reduce using rule 12 (value)

    list            go to state 23
    value           go to state 77
    structure       go to state 25
    math_expr_low   go to state 27
    math_expr_high  go to state 28
    math_term_low   go to state 29
    math_term_high  go to state 30
    math_factor     go to state 31
    operand         go to state 32


state 63

   33 expr_delim: comma .

    $default  reduce using rule 33 (expr_delim)


state 64

   34 expr_delim: semicolon .

    $default  reduce using rule 34 (expr_delim)


state 65

   35 rule_exprs: expr_in_functor end_stmt .

    $default  reduce using rule 35 (rule_exprs)


state 66

   36 rule_exprs: expr_in_functor expr_delim . rule_exprs

    lparen      shift, and go to state 15
    lbracket    shift, and go to state 16
    wildcard    shift, and go to state 17
    negation    shift, and go to state 33
    cut         shift, and go to state 34
    variable    shift, and go to state 18
    atom        shift, and go to state 35
    t_string    shift, and go to state 20
    t_integer   shift, and go to state 21
    t_floating  shift, and go to state 22

    unifier   reduce using rule 12 (value)
    $default  reduce using rule 23 (expr_in_functor)

    list             go to state 23
    value            go to state 36
    unification      go to state 37
    structure        go to state 38
    expr_in_functor  go to state 39
    rule_exprs       go to state 78
    eval_math        go to state 41
    math_expr_low    go to state 42
    math_expr_high   go to state 28
    math_term_low    go to state 29
    math_term_high   go to state 30
    math_factor      go to state 31
    operand          go to state 32


state 67

   37 eval_math: math_expr_low math_evaluator . math_expr_low

    lparen      shift, and go to state 15
    variable    shift, and go to state 18
    t_integer   shift, and go to state 21
    t_floating  shift, and go to state 22

    math_expr_low   go to state 79
    math_expr_high  go to state 28
    math_term_low   go to state 29
    math_term_high  go to state 30
    math_factor     go to state 31
    operand         go to state 32


state 68

   55 math_factor: lparen math_expr_low rparen .

    $default  reduce using rule 55 (math_factor)


state 69

    8 list: lbracket list_seq rbracket .

    $default  reduce using rule 8 (list)


state 70

   10 list_seq: value vline . value

    lparen      shift, and go to state 15
    lbracket    shift, and go to state 16
    wildcard    shift, and go to state 17
    variable    shift, and go to state 18
    atom        shift, and go to state 19
    t_string    shift, and go to state 20
    t_integer   shift, and go to state 21
    t_floating  shift, and go to state 22

    $default  reduce using rule 12 (value)

    list            go to state 23
    value           go to state 80
    structure       go to state 25
    math_expr_low   go to state 27
    math_expr_high  go to state 28
    math_term_low   go to state 29
    math_term_high  go to state 30
    math_factor     go to state 31
    operand         go to state 32


state 71

   11 list_seq: value comma . list_seq

    lparen      shift, and go to state 15
    lbracket    shift, and go to state 16
    wildcard    shift, and go to state 17
    variable    shift, and go to state 18
    atom        shift, and go to state 19
    t_string    shift, and go to state 20
    t_integer   shift, and go to state 21
    t_floating  shift, and go to state 22

    $default  reduce using rule 12 (value)

    list            go to state 23
    list_seq        go to state 81
    value           go to state 46
    structure       go to state 25
    math_expr_low   go to state 27
    math_expr_high  go to state 28
    math_term_low   go to state 29
    math_term_high  go to state 30
    math_factor     go to state 31
    operand         go to state 32


state 72

   22 args: value comma args .

    $default  reduce using rule 22 (args)


state 73

   47 math_expr_low: math_expr_low prec_1 math_expr_high .
   49 math_expr_high: math_expr_high . prec_2 math_term_low

    add       shift, and go to state 54
    subtract  shift, and go to state 55

    $default  reduce using rule 47 (math_expr_low)

    prec_2  go to state 56


state 74

   49 math_expr_high: math_expr_high prec_2 math_term_low .
   51 math_term_low: math_term_low . prec_3 math_term_high

    multiply  shift, and go to state 57
    divide    shift, and go to state 58

    $default  reduce using rule 49 (math_expr_high)

    prec_3  go to state 59


state 75

   51 math_term_low: math_term_low prec_3 math_term_high .
   53 math_term_high: math_term_high . exponent math_factor

    exponent  shift, and go to state 60

    $default  reduce using rule 51 (math_term_low)


state 76

   53 math_term_high: math_term_high exponent math_factor .

    $default  reduce using rule 53 (math_term_high)


state 77

   19 unification: value unifier value .

    $default  reduce using rule 19 (unification)


state 78

   36 rule_exprs: expr_in_functor expr_delim rule_exprs .

    $default  reduce using rule 36 (rule_exprs)


state 79

   37 eval_math: math_expr_low math_evaluator math_expr_low .
   47 math_expr_low: math_expr_low . prec_1 math_expr_high

    smaller     shift, and go to state 49
    smaller_eq  shift, and go to state 50
    greater     shift, and go to state 51
    greater_eq  shift, and go to state 52

    $default  reduce using rule 37 (eval_math)

    prec_1  go to state 53


state 80

   10 list_seq: value vline value .

    $default  reduce using rule 10 (list_seq)


state 81

   11 list_seq: value comma list_seq .

    $default  reduce using rule 11 (list_seq)
